syntax = "v1"

type Empty {
}

type BasicResponse {
	StatusCode int32  `json:"status_code"`
	StatusMsg  string `json:"status_msg"`
}

type (
	RegisterRequest {
		Username string `form:"username"`
		Password string `form:"password"`
	}

	RegisterResponse {
		BasicResponse
		UserId int64  `json:"user_id"`
		Token  string `json:"token"`
	}
)

type (
	LoginRequest {
		Username string `form:"username"`
		Password string `form:"password"`
	}

	LoginResponse {
		BasicResponse
		UserId int64  `json:"user_id"`
		Token  string `json:"token"`
	}
)

type (
	User {
		Id                 int64  `json:"id"`
		Name               string `json:"name"`
		FollowCount        int64  `json:"follow_count"`
		FollowerCount      int64  `json:"follower_count"`
		IsFollow           bool   `json:"is_follow"`
		AvatarUrl          string `json:"avatar"`
		BackgroundImageUrl string `json:"background_image"`
		Signature          string `json:"signature"`
		TotalFavorited     int64  `json:"total_favorited"`
		WorkCount          int64  `json:"work_count"`
		FavoriteCount      int64  `json:"favorite_count"`
	}

	GetUserInfoRequest {
		UserId int64  `form:"user_id"`
		Token  string `form:"token"`
	}

	GetUserInfoResponse {
		BasicResponse
		User User `json:"user"`
	}
)

type (
	FollowRequest {
		ToUserId   int64  `form:"to_user_id"`
		Token      string `form:"token"`
		ActionType int32  `form:"action_type"`
	}

	FollowResponse {
		BasicResponse
	}
)

type (
	Video {
		Id            int64  `json:"id"`
		Title         string `json:"title"`
		Author        User   `json:"author"`
		PlayUrl       string `json:"play_url"`
		CoverUrl      string `json:"cover_url"`
		FavoriteCount int64  `json:"favorite_count"`
		CommentCount  int64  `json:"comment_count"`
		IsFavorite    bool   `json:"is_favorite"`
	}

	GetVideoListRequest {
		LatestTime int64  `form:"latest_time,optional"`
		Token      string `form:"token,optional"`
	}

	GetVideoListResponse {
		BasicResponse
		Next_time int64   `json:"next_time"`
		VideoList []Video `json:"video_list"`
	}
)

type (
	GetFriendListRequest {
		UserId int64  `form:"user_id"`
		Token  string `form:"token"`
	}

	GetFriendListResponse {
		BasicResponse
		UserList []User `json:"user_list"`
	}
)

type (
	PublishVideoRequest {
		Title string `form:"title"`
		Token string `form:"token"`
		//Data  []byte `form:"data"`
	}
	PublishVideoResponse {
		BasicResponse
	}
)

type (
	FavoriteRequest {
		Token      string `form:"token"`
		VideoId    int64  `form:"video_id"`
		ActionType int32  `form:"action_type"`
	}
	FavoriteResponse {
		BasicResponse
	}
)
type (
	GetFavoriteListRequest {
		Token  string `form:"token"`
		UserId int64  `form:"user_id"`
	}
	GetFavoriteListResponse {
		BasicResponse
		VideoList []Video `json:"video_list"`
	}
)

@server(
	group: app
)
service tikstart {
	@handler Ping
	get /ping (Empty) returns (BasicResponse)
}

@server(
	group: video
)
service tikstart {
	@handler GetVideoList // 视频流接口
	get /douyin/feed (GetVideoListRequest) returns (GetVideoListResponse)
}

@server(
	middleware: JwtAuth
	group: video
)
service tikstart {
	@handler PublishVideo // 发布视频
	post /douyin/publish/action (PublishVideoRequest) returns (PublishVideoResponse)
}

@server(
	group: user
	prefix: /douyin/user
)
service tikstart {
	@handler Register
	post /register (RegisterRequest) returns (RegisterResponse)

	@handler Login
	post /login (LoginRequest) returns (LoginResponse)
}

@server(
	group : user
	prefix: /douyin/user
	middleware: JwtAuth
)
service tikstart {
	@handler GetUserInfo
	get / (GetUserInfoRequest) returns (GetUserInfoResponse)
}

@server(
	group: social
	prefix: /douyin/relation
)
service tikstart {
	@handler Follow
	post /action (FollowRequest) returns (FollowResponse)
}

@server(
	group: social
	prefix: /douyin/relation
)
service tikstart {
	@handler GetFriendList
	get /friend/list (GetFriendListRequest) returns (GetFriendListResponse)
}

@server(
	group: video
	prefix: /douyin/favorite
	middleware: JwtAuth
)
service tikstart {
	@handler Favorite
	post /action (FavoriteRequest) returns (FavoriteResponse)

	@handler GetFavoriteList
	get /list (GetFavoriteListRequest) returns (GetFavoriteListResponse)
}

type (
	Message {
		Id         int64  `json:"id"`
		ToUserId   int64  `json:"to_user_id"`
		FromUserId int64  `json:"from_user_id"`
		Content    string `json:"content"`
		CreateTime string `json:"create_time"`
	}
	MessageChatRequest {
		Token      string `form:"token"`
		ToUserId   int64  `form:"to_user_id"`
		PreMsgTime int64  `form:"pre_msg_time"`
	}
	MessageChatResponse {
		BasicResponse
		MessageList []Message `json:"message_list"`
	}
	MessageActionRequest {
		Token      string `form:"token"`
		ToUserId   int64  `form:"to_user_id"`
		ActionType int32  `form:"action_type"`
		Content    string `form:"content"`
	}
	MessageActionResponse {
		BasicResponse
	}
)

@server(
	group: message
	prefix: /douyin
	middleware: JwtAuth
)
service tikstart {
	@handler Chat
	get /message/chat (MessageChatRequest) returns (MessageChatResponse)

	@handler Action
	post /message/action (MessageActionRequest) returns (MessageActionResponse)
}

type (
	Comment {
		Id         int64  `json:"id"`
		User       User   `json:"user"`
		Content    string `json:"content"`
		CreateDate string `json:"create_date"`
	}
	CommentRequest {
		Token       string `form:"token"`
		VideoId     int64  `form:"video_id"`
		ActionType  int32  `form:"action_type"`
		CommentText string `form:"comment_text,optional"`
		CommentId   int64  `form:"comment_id,optional"`
	}
	CommentResponse {
		BasicResponse
		Comment Comment `json:"comment"`
	}
	GetCommentListRequest {
		Token   string `form:"token"`
		VideoId int64  `form:"video_id"`
	}
	GetCommentListResponse {
		BasicResponse
		CommentList []Comment `json:"comment_list"`
	}
)

@server(
	group: video
	prefix: /douyin
	middleware: JwtAuth
)
service tikstart {
	@handler CommentVideo
	post /comment/action (CommentRequest) returns (CommentResponse)

	@handler GetCommentList
	get /comment/list (GetCommentListRequest) returns (GetCommentListResponse)
}

type (
	GetFollowListRequest {
		Token  string `form:"token"`
		UserId int64  `form:"user_id"`
	}
	GetFollowListResponse {
		BasicResponse
		UserList []User `json:"user_list"`
	}
	GetFollowerListRequest {
		Token  string `form:"token"`
		UserId int64  `form:"user_id"`
	}
	GetFollowerListResponse {
		BasicResponse
		UserList []User `json:"user_list"`
	}
)

@server (
	group: social
	prefix: /douyin/relation
	middleware: JwtAuth
)
service tikstart {
	@handler GetFollowList
	get /follow/list (GetFollowListRequest) returns (GetFollowListResponse)

	@handler GetFollowerList
	get /follower/list (GetFollowerListRequest) returns (GetFollowerListResponse)
}