syntax = "proto3";

package user;
option go_package = "./user";

message PingRequest {
  string ping = 1;
}

message PingResponse {
  string pong = 1;
}

message CreateRequest {
  string username = 1;
  string password = 2;
}

message CreateResponse {
  int64 user_id = 1;
}

message QueryByIdRequest {
  int64 user_id = 1;
}

message QueryByNameRequest {
  string username = 1;
}

message QueryResponse {
  int64 user_id = 1;
  string username = 2;
  int64 follow_count = 3;
  int64 follower_count = 4;
  //  string avatar = 6;
  //  string background_image = 7;
  //  string signature = 8;
  bytes password = 12;
  int64 created_at = 15;
  int64 updated_at = 16;
}

message Empty{}

message FollowRequest{
  int64 user_id = 1;
  int64 target_id = 2;
}

message UnFollowRequest{
  int64 user_id = 1;
  int64 target_id = 2;
}

message GetFollowerListRequest{
  int64 user_id = 1;
}

message UserInfo {
  int64 user_id = 1;
  string username = 2;
  int64 following_count = 3;
  int64 follower_count = 4;
  bool  is_follow = 14;
  int64 created_at = 15;
  int64 updated_at = 16;
}

message GetFollowerListResponse{
  repeated UserInfo follower_list = 1;
}

message GetFollowingListRequest{
  int64 user_id = 1;
}

message GetFollowingListResponse{
  repeated int64 following_list = 1;
}

message IsFollowRequest{
  int64 user_id = 1;
  int64 target_id = 2;
}

message IsFollowResponse{
  bool is_follow = 1;
}

service User {
  rpc Ping(PingRequest) returns(PingResponse);
  rpc Create(CreateRequest) returns(CreateResponse);
  rpc QueryById(QueryByIdRequest) returns(QueryResponse);
  rpc QueryByName(QueryByNameRequest) returns(QueryResponse);
  rpc Follow(FollowRequest) returns(Empty);
  rpc UnFollow(UnFollowRequest) returns(Empty);
  rpc GetFollowerList(GetFollowerListRequest) returns(GetFollowerListResponse);
  rpc GetFollowingList(GetFollowingListRequest) returns(GetFollowingListResponse);
  rpc IsFollow(IsFollowRequest) returns(IsFollowResponse);
}